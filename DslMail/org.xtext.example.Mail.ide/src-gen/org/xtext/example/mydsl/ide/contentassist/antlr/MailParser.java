/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMailParser;
import org.xtext.example.mydsl.services.MailGrammarAccess;

public class MailParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MailGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MailGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getAlefasoMailakaAccess().getGroup(), "rule__AlefasoMailaka__Group__0");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getGroup_11(), "rule__AlefasoMailaka__Group_11__0");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getMessageAssignment_4(), "rule__AlefasoMailaka__MessageAssignment_4");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getObjet_de_mailAssignment_7(), "rule__AlefasoMailaka__Objet_de_mailAssignment_7");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getRecipientsAssignment_10(), "rule__AlefasoMailaka__RecipientsAssignment_10");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getRecipientsAssignment_11_1(), "rule__AlefasoMailaka__RecipientsAssignment_11_1");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getSenderAssignment_14(), "rule__AlefasoMailaka__SenderAssignment_14");
			builder.put(grammarAccess.getAlefasoMailakaAccess().getPasswordAssignment_17(), "rule__AlefasoMailaka__PasswordAssignment_17");
			builder.put(grammarAccess.getEmailRecipientAccess().getEmailAssignment(), "rule__EmailRecipient__EmailAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MailGrammarAccess grammarAccess;

	@Override
	protected InternalMailParser createParser() {
		InternalMailParser result = new InternalMailParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MailGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MailGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
